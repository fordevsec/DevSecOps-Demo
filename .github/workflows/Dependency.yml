name: "Dependency-workflow"

on:
  push:
    branches: [ "feature/**",]
  pull_request:
    branches: [ "main" ]


jobs:
  SBOM-Generate-Job: # Trivyを使用してSBOMを生成&artifactにアップロードするJob
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy SBOM 
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'spdx-json'
          output: 'dependency-results.sbom.json'
          image-ref: '.'

      - name: Upload trivy report as a Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-report
          path: '${{ github.workspace }}/dependency-results.sbom.json'
          retention-days: 20 # 90 is the default
  
  Dependency-Scan-Job: # Trivyを使用して脆弱性をスキャン&GitHub Securityに送信するJob
    runs-on: ubuntu-20.04
    permissions:
      # GitHub Securityに送信するので必要な項目
      security-events: write
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom-report

      - name: Run Trivy vulnerability scanner in SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'sbom'
          scan-ref: 'dependency-results.sbom.json'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'